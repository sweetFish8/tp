@startuml
class VoyaTrip {
+ {static} run(): void
}

class Ui

class Message

class Trip{
    - name: String
    - startDate: LocalDate
    - endDate: LocalDate
    - totalBudget: Integer
    - numDays: Integer
    + Trip(destination: String, startDate: String, endDate: String, totalBudget: Integer)
    + addItinerary(day: Integer, name: String, budget: Integer): void
    + addAccommodation(name: String, budget: Integer): void
    + deleteAccommodation(index: Integer): void
    + deleteAccommodation(name: String): void
    + addTransportation(mode: String, budget: Integer): void
    + deleteTransportation(index: Integer): void
    + deleteTransportation(name: String): void
    + abbrInfo(): String
    + toString(){redefines toString()}: String
}

class TripList{
    + add(trip: Trip): void
    + delete(index: Integer): void
    + delete(name: String): void
    + get(index: Integer): Trip
    + get(name: String): Trip
    + isContains(name: String): boolean
    + listTrip(index: Integer): Trip
}

class Day{
    - budget: Integer
    + Day()
    + addActivity(name: String, budget Integer): void
    + toString(){redefines toString()}: String
}

class Activity{
    - name: String
    - time: String
    + Activity(name: String, time: Integer)
    + toString(){redefines toString()}: String
}

class Accommodation{
    - name: String
    - budget: Integer
    + Accommodation(name: String, budget: Integer)
    + toString(){redefines toString()}: String
}

class Transportation{
    - mode: String
    - budget: Integer
    + Transportation(mode: String, budget: Integer)
    + toString(){redefines toString()}: String
}

enum CommandTarget {
    + TRIP
    + ITINERARY
    + DAY
    + ACTIVITY
    + ACCOMMODATION
    + TRANSPORTATION
}

enum CommandAction {
    + ADD,
    + DELETE_BY_INDEX
    + DELETE_BY_NAME
    + LIST
    + CHANGE_DIRECTORY
    + CHANGE_TRIP_BY_INDEX
    + CHANGE_TRIP_BY_NAME
    + EXIT
}

class Parser {
    - currentTrip: String
    + Parser()
    + setCurrentTarget(target: CommandTarget): void
    + setCurrentTrip(trip: String): void
    + getCurrentPath(): String
    + parse(command: String): Command
}

abstract class Command {
    - keyword: String
    + Command(keyword: String)
    + getKeyword(): String
    + equals(Object o): Boolean
    + getCommandAction(): CommandAction
    + getCommandTarget(): CommandTarget
    # splitByDoubleHyphen(command: String): String[]
    # processRawArgument(rawArgument: String): void
    # matchArgument(argument: String): void {abstract}
    # isInvalidArgument(argument: String): boolean {abstract}
}

class AccommodationCommand extends Command {
    - trip: String
    - name: String
    - budget: Integer
    - index: Integer
    + AccommodationCommand(keyword: String, trip: String, rawArgument: String)
    + getTrip(): String
    + getName(): String
    + getBudget(): Integer
    + getIndex(): Integer
}

class TransportationCommand extends Command {
    - trip: String
    - name: String
    - mode: String
    - budget: Integer
    - index: Integer
    + TransportationCommand(keyword: String, trip: String, rawArgument: String)
    + getTrip(): String
    + getName(): String
    + getMode(): String
    + getBudget(): Integer
    + getIndex(): Integer
}

class ItineraryCommand extends Command {
    - trip: String
    - name: String
    - time: String
    - budget: Integer
    - day: Integer
    + ItineraryCommand(keyword: String, trip: String, rawArgument: String)
    + getTrip(): String
    + getName(): String
    + getTime(): String
    + getBudget(): Integer
    + getDay(): Integer
}

class TripCommand extends Command {
    - INVALID_NAMES: ArrayList<String> {static}
    - trip: String
    - name: String
    - budget: Integer
    - index: Integer
    + TripCommand(keyword: String, trip: String, rawArgument: String)
    + getTrip(): String
    + getName(): String
    + getBudget(): Integer
    + getIndex(): Integer
    # matchArgument(argument: String): void
}

exception IOException
exception InvalidCommand

InvalidCommand -|> IOException

TripList <- "1" VoyaTrip : - trips

TripList --> "*" Trip : - trips: ArrayList<Trip>
VoyaTrip *-right- "1" Parser : -parser
VoyaTrip *-down- "1" Ui : -ui

Ui .> Message

Parser -up-> CommandTarget: - currentTarget: CommandTarget
Parser -> Command : - command: Command
Parser -- InvalidCommand : > throw
Command -up-> CommandTarget: - commandTarget: CommandTarget
Command -up-> CommandAction: - commandAction: CommandAction
AccommodationCommand -- InvalidCommand : > throw
ItineraryCommand -- InvalidCommand : > throw
TransportationCommand -- InvalidCommand : > throw
TripCommand -- InvalidCommand : > throw

Trip --> "0..numDays" Day : - itineraries: ArrayList<Day>
Day --> "*" Activity : - activities: ArrayList<Activity>
Trip --> "*" Accommodation : - accommodations: ArrayList<Accommodation>
Trip --> "*" Transportation : - transportations: ArrayList<Transportation>


@enduml